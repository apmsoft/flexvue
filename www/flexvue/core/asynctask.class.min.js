"use strict";export default class AsyncTask{async doGet(e,t,o={}){let n=e.length,s=e.lastIndexOf("."),a=e.substring(s,n).toLowerCase();if(!config.is_hybrideapp||".json"!=a&&".xml"!=a||"Android"!=App.os&&"iPhone"!=App.os){let n=e;if(Object.keys(t).length>0){let e=Object.entries(t).map(([e,t])=>`${e}=${encodeURIComponent(t)}`).join("&");n=`${n}?${e}`}Log.d("doGet --> "+n);let s=o||{"Content-Type":"application/json"},a={method:"GET",mode:"cors",cache:config.cache,headers:s};const r=await fetch(n,a);if(r.ok)return await r.json();throw new Error(r.status)}return new Promise((e,t)=>{let o=".json"==a?"application/json":"application/xml";var n=new XMLHttpRequest;n.overrideMimeType(o),n.open("GET",filename,!0),n.onreadystatechange=function(){4==n.readyState&&"200"==n.status&&e(JSON.parse(n.responseText))},n.send(null)})}async doPost(e,t,o={}){let n=e,s=o||{"Content-Type":"application/json"},a={method:void 0!==t.id&&null!==t.id?"PUT":"POST",mode:"cors",cache:"no-cache",headers:s,body:JSON.stringify(t)};Log.d(n);const r=await fetch(n,a);if(r.ok)return await r.json();throw new Error(r.status)}async doImport(e){return Log.d("doImport : "+e),await import(e).then(e=>e)}async doImportCss(e){if(Log.d("doImportCss : "+e),null===document.querySelector(`[href="${e}"]`))return Log.d("run link import css"),await document.getElementsByTagName("head")[0].insertAdjacentHTML("beforeend",`<link rel="stylesheet" href="${e}" />`)}}