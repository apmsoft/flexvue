"use strict";export default class Template{async readFile(e,t,r={}){let n=document.querySelector("script"+t);if(n&&"null"!==n)return Log.d("is disk cache"),document.querySelector("script"+t).innerText;if(Log.d("read file"),!config.is_hybrideapp||"Android"!=App.os&&"iPhone"!=App.os){let n=r||{"Content-Type":"text/html"},o={method:"GET",mode:"cors",cache:"default",headers:n};const s=await fetch(e,o);if(s.ok)return Promise.resolve(document.querySelector("body").insertAdjacentHTML("afterend",await s.text())).then(function(){return document.querySelector("script"+t).innerText});throw new Error(s.status)}return new Promise((r,n)=>{let o=e.length,s=e.lastIndexOf("."),c=e.substring(s,o).toLowerCase(),i=".html"==c?"text/html":"text/plain";var u=new XMLHttpRequest;u.overrideMimeType(i),u.open("GET",e,!0),u.onreadystatechange=function(){4==u.readyState&&"200"==u.status&&Promise.resolve(document.querySelector("body").insertAdjacentHTML("afterend",u.responseText)).then(function(){r(document.querySelector("script"+t).innerText)})},u.send(null)})}render(e,t){const r=new Function(...Object.keys(t),"return `"+e+"`;");return r(...Object.values(t))}}